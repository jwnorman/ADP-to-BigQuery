# -*- coding: utf-8 -*-
"""convert_adp_schema_to_bq_schema.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bw-6raJcjxGa2rGee8BcuIT-PqrqmYCw

### Define ADP schema

Find the schema from https://developers.adp.com/articles/api/all.  
This example will use the Workers-v2 API: https://developers.adp.com/articles/api/workers-v2-api
"""

# copy pasting this schema from the ADP docs; it has
# `true` and `false` unquoted so I'm just defining these
# up top so it doesn't throw an error
true = True
false = False
adp_schema_json = [
  {
    "control_type": "text",
    "label": "Associate OID",
    "type": "string",
    "name": "associateOID"
  },
  {
    "properties": [
      {
        "control_type": "text",
        "label": "ID value",
        "type": "string",
        "name": "idValue"
      }
    ],
    "label": "Worker ID",
    "type": "object",
    "name": "workerID"
  },
  {
    "properties": [
      {
        "control_type": "text",
        "label": "Birth date",
        "type": "string",
        "name": "birthDate"
      },
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Code value",
            "type": "string",
            "name": "codeValue"
          },
          {
            "control_type": "text",
            "label": "Short name",
            "type": "string",
            "name": "shortName"
          },
          {
            "control_type": "text",
            "label": "Long name",
            "type": "string",
            "name": "longName"
          }
        ],
        "label": "Gender code",
        "type": "object",
        "name": "genderCode"
      },
      {
        "properties": [
          {
            "name": "codeFields",
            "type": "array",
            "of": "object",
            "label": "Code fields",
            "properties": [
              {
                "control_type": "text",
                "label": "Item ID",
                "type": "string",
                "name": "itemID"
              },
              {
                "properties": [
                  {
                    "control_type": "text",
                    "label": "Code value",
                    "type": "string",
                    "name": "codeValue"
                  },
                  {
                    "control_type": "text",
                    "label": "Short name",
                    "type": "string",
                    "name": "shortName"
                  }
                ],
                "label": "Name code",
                "type": "object",
                "name": "nameCode"
              }
            ]
          }
        ],
        "label": "Custom field group",
        "type": "object",
        "name": "customFieldGroup"
      },
      {
        "name": "governmentIDs",
        "type": "array",
        "of": "object",
        "label": "Government I ds",
        "properties": [
          {
            "control_type": "text",
            "label": "ID value",
            "type": "string",
            "name": "idValue"
          },
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Long name",
                "type": "string",
                "name": "longName"
              }
            ],
            "label": "Name code",
            "type": "object",
            "name": "nameCode"
          },
          {
            "control_type": "text",
            "label": "Country code",
            "type": "string",
            "name": "countryCode"
          }
        ]
      },
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Given name",
            "type": "string",
            "name": "givenName"
          },
          {
            "control_type": "text",
            "label": "Family name 1",
            "type": "string",
            "name": "familyName1"
          }
        ],
        "label": "Legal name",
        "type": "object",
        "name": "legalName"
      },
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Line one",
            "type": "string",
            "name": "lineOne"
          },
          {
            "control_type": "text",
            "label": "City name",
            "type": "string",
            "name": "cityName"
          },
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Country subdivision level 1",
            "type": "object",
            "name": "countrySubdivisionLevel1"
          },
          {
            "control_type": "text",
            "label": "Country code",
            "type": "string",
            "name": "countryCode"
          },
          {
            "control_type": "text",
            "label": "Postal code",
            "type": "string",
            "name": "postalCode"
          }
        ],
        "label": "Legal address",
        "type": "object",
        "name": "legalAddress"
      },
      {
        "properties": [
          {
            "name": "mobiles",
            "type": "array",
            "of": "object",
            "label": "Mobiles",
            "properties": [
              {
                "control_type": "text",
                "label": "Country dialing",
                "type": "string",
                "name": "countryDialing"
              },
              {
                "control_type": "text",
                "label": "Area dialing",
                "type": "string",
                "name": "areaDialing"
              },
              {
                "control_type": "text",
                "label": "Dial number",
                "type": "string",
                "name": "dialNumber"
              },
              {
                "control_type": "text",
                "label": "Access",
                "type": "string",
                "name": "access"
              }
            ]
          },
          {
            "name": "emails",
            "type": "array",
            "of": "object",
            "label": "Emails",
            "properties": [
              {
                "control_type": "text",
                "label": "Email URI",
                "type": "string",
                "name": "emailUri"
              }
            ]
          }
        ],
        "label": "Communication",
        "type": "object",
        "name": "communication"
      }
    ],
    "label": "Person",
    "type": "object",
    "name": "person"
  },
  {
    "properties": [
      {
        "control_type": "text",
        "label": "Original hire date",
        "type": "string",
        "name": "originalHireDate"
      },
      {
        "control_type": "text",
        "label": "Rehire date",
        "type": "string",
        "name": "rehireDate",
        "optional": true
      }
    ],
    "label": "Worker dates",
    "type": "object",
    "name": "workerDates"
  },
  {
    "properties": [
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Code value",
            "type": "string",
            "name": "codeValue"
          }
        ],
        "label": "Status code",
        "type": "object",
        "name": "statusCode"
      }
    ],
    "label": "Worker status",
    "type": "object",
    "name": "workerStatus"
  },
  {
    "properties": [
      {
        "name": "emails",
        "type": "array",
        "of": "object",
        "label": "Emails",
        "properties": [
          {
            "control_type": "text",
            "label": "Email URI",
            "type": "string",
            "name": "emailUri"
          }
        ]
      }
    ],
    "label": "Business communication",
    "type": "object",
    "name": "businessCommunication"
  },
  {
    "name": "workAssignments",
    "type": "array",
    "of": "object",
    "label": "Work assignments",
    "properties": [
      {
        "control_type": "text",
        "label": "Item ID",
        "type": "string",
        "name": "itemID"
      },
      {
        "control_type": "text",
        "label": "Primary indicator",
        "render_input": {},
        "parse_output": {},
        "toggle_hint": "Select from option list",
        "toggle_field": {
          "label": "Primary indicator",
          "control_type": "text",
          "toggle_hint": "Use custom value",
          "type": "boolean",
          "name": "primaryIndicator"
        },
        "type": "boolean",
        "name": "primaryIndicator"
      },
      {
        "control_type": "text",
        "label": "Hire date",
        "type": "string",
        "name": "hireDate"
      },
      {
        "control_type": "text",
        "label": "Actual start date",
        "type": "string",
        "name": "actualStartDate"
      },
      {
        "control_type": "text",
        "label": "Termination date",
        "type": "string",
        "name": "terminationDate"
      },
      {
        "properties": [
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              },
              {
                "control_type": "text",
                "label": "Long name",
                "type": "string",
                "name": "longName"
              }
            ],
            "label": "Status code",
            "type": "object",
            "name": "statusCode"
          },
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Reason code",
            "type": "object",
            "name": "reasonCode"
          }
        ],
        "label": "Assignment status",
        "type": "object",
        "name": "assignmentStatus"
      },
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Code value",
            "type": "string",
            "name": "codeValue"
          },
          {
            "control_type": "text",
            "label": "Short name",
            "type": "string",
            "name": "shortName"
          }
        ],
        "label": "Worker type code",
        "type": "object",
        "name": "workerTypeCode"
      },
      {
        "name": "workerGroups",
        "type": "array",
        "of": "object",
        "label": "Worker groups",
        "properties": [
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Group code",
            "type": "object",
            "name": "groupCode"
          }
        ]
      },
      {
        "properties": [
          {
            "control_type": "text",
            "label": "Code value",
            "type": "string",
            "name": "codeValue"
          },
          {
            "control_type": "text",
            "label": "Short name",
            "type": "string",
            "name": "shortName"
          }
        ],
        "label": "Job code",
        "type": "object",
        "name": "jobCode"
      },
      {
        "control_type": "text",
        "label": "Position ID",
        "type": "string",
        "name": "positionID"
      },
      {
        "name": "homeOrganizationalUnits",
        "type": "array",
        "of": "object",
        "label": "Home organizational units",
        "properties": [
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Name code",
            "type": "object",
            "name": "nameCode"
          },
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Type code",
            "type": "object",
            "name": "typeCode"
          }
        ]
      },
      {
        "properties": [
          {
            "properties": [
              {
                "control_type": "text",
                "label": "Code value",
                "type": "string",
                "name": "codeValue"
              },
              {
                "control_type": "text",
                "label": "Short name",
                "type": "string",
                "name": "shortName"
              }
            ],
            "label": "Name code",
            "type": "object",
            "name": "nameCode"
          }
        ],
        "label": "Home work location",
        "type": "object",
        "name": "homeWorkLocation"
      },
      {
        "control_type": "text",
        "label": "Payroll group code",
        "type": "string",
        "name": "payrollGroupCode"
      },
      {
        "control_type": "text",
        "label": "Payroll file number",
        "type": "string",
        "name": "payrollFileNumber"
      },
      {
        "control_type": "text",
        "label": "Management position indicator",
        "render_input": {},
        "parse_output": {},
        "toggle_hint": "Select from option list",
        "toggle_field": {
          "label": "Management position indicator",
          "control_type": "text",
          "toggle_hint": "Use custom value",
          "type": "boolean",
          "name": "managementPositionIndicator"
        },
        "type": "boolean",
        "name": "managementPositionIndicator"
      }
    ]
  }
]

"""### Define BQ Destination Parameters"""

destination_dataset = "adp_family_medicine"
destination_table = "adp_workers"

"""### Map the datatypes from ADP to BQ"""

dtype_mapper = {
    "integer": "INT64",
    "float": "FLOAT64",
    "boolean": "BOOL",
    "string": "STRING",
    "object": "STRUCT<\n{field_list}\n{tabs}>",
    "array": "ARRAY<{array_element_schema}>"
}

"""### ADPtoBQSchema class"""

class ADPtoBQSchema:
    def __init__(self, dataset, table, dtype_mapper, adp_schema):
        self.dataset = dataset  
        self.table = table
        self.dtype_mapper = dtype_mapper
        self.adp_schema = adp_schema
        self.bq_schema = None

        self.DDL = ""
    
        self.tab_counter = 1
    
    @property
    def bq_schema_template(self):
        template = "CREATE TABLE {dataset}.{table}\n(\n{DDL}\n)"
        return template.format(
            dataset=self.dataset,
            table=self.table,
            DDL=self.DDL
        )
  
    def translate(self):
        self.DDL = self._translate(self.adp_schema)
        self.bq_schema = self.bq_schema_template.format(DDL=self.DDL)
        return self.bq_schema

    def _translate(self, adp_schema):
        DDL = ""
        for i, item in enumerate(adp_schema):
            include_trailing_comma_and_newline = i != len(adp_schema)-1
            if item["type"] in ("string", "boolean"):
                DDL += "{tabs}{var} {dtype}{end}".format(
                    tabs="\t"*self.tab_counter,
                    var=item["name"],
                    dtype=self.dtype_mapper[item["type"]],
                    end=",\n" if include_trailing_comma_and_newline else "")
                
            elif item["type"] == "object":
                ddl_temp = "{tabs}{var} {dtype}{end}".format(
                    tabs="\t"*self.tab_counter,
                    var=item["name"],
                    dtype=self.dtype_mapper["object"],
                    end=",\n" if include_trailing_comma_and_newline else "")
                self.tab_counter += 1
                translated_properties = self._translate(item["properties"])
                DDL += ddl_temp.format(
                    field_list=translated_properties,
                    tabs="\t"*(self.tab_counter-1))
                self.tab_counter -= 1

            elif item["type"] == "array":
                # is an array of anything but objects
                if item["of"] != "object":
                    DDL += "{tabs}{var} {dtype}{end}".format(
                        tabs="\t"*self.tab_counter,
                        var=item["name"],
                        dtype=self.dtype_mapper["array"].format(
                            array_element_schema=self.dtype_mapper["of"]
                        ),
                        end=",\n" if include_trailing_comma_and_newline else "")
                # is an array of objects
                else:
                    ddl_temp = "{tabs}{var} {dtype}{end}".format(
                        tabs="\t"*self.tab_counter,
                        var=item["name"],
                        dtype=self.dtype_mapper["array"].format(
                            array_element_schema=self.dtype_mapper["object"]),
                        end=",\n" if include_trailing_comma_and_newline else "")
                    self.tab_counter += 1

                    translated_properties = self._translate(item["properties"])
                    DDL += ddl_temp.format(
                        field_list=translated_properties,
                        tabs="\t"*(self.tab_counter-1)) 
                    self.tab_counter -= 1           
            else:
                print(item["type"])
                raise NotImplementedError
        return DDL

"""### Convert the schema"""

schema_map = ADPtoBQSchema(
    dataset=destination_dataset,
    table=destination_table,
    dtype_mapper=dtype_mapper,
    adp_schema=adp_schema_json
)

bq_schema = schema_map.translate()
print(bq_schema)
